Workflow:

A.  Load EVERYTHING from disk in to the "Library".  You tell me the all the roots (LibraryRoot) and 
	I'll walk through all files and load them into the "Library": duplicates, all file types, everything.

B.	Create/Update the file extension list of all known file extensions from the "Library".  You tell 
	me, which extensions need to be processed from the "Library" by setting a flag in the table.  For 
	example, I'm not going to process ".jpeg" files since they don't contain a media type I'm 
	interested in.  Remember, this is basically to help manage "music" files.

C.  I'll walk through the "Library" looking only at files with the extensions you told me
	to process (in step B) and then extract the tag info from the file.  I'll place all of 
	the detail into "LibraryFileSpec".  You might want to make sure that I didn't miss 
	any important files from the "Library"

D.	Create the "MasterLibraryFile"... this will dedup (and attempt to pick the "best" copy)
	and create the List of Files to be written to disk and given to iTunes to process.  
	The de-dup is by "artist-album-title" with special care given to files that 
	do not contain one of those attributes.  In fact, any "track" that is missing one or
	more of "artist-album-title" will not be de-duped.

E.  Copy files from the various LibraryRoot locations to the Master Library Location based 
	on the "MasterLibraryFile".  

0.  In order for the copy-to-master step to work, windows needs a little tweek:
	http://boinst.wordpress.com/2012/03/20/mount-cifs-cannot-allocate-memory-mounting-windows-share/
	Set the following paramter to "3" in regedit.
	HKLM\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters\Size
	
	In order to get iTunes to "add a folder" to the library, you may need to hit the "alt" key to bring up the menu.

1.  Recreate the tablespace and database:
	CREATE TABLESPACE bachdb
	  OWNER bach
	  LOCATION '/u02/pgsql/bachdb';

    CREATE DATABASE bachdb
      WITH OWNER = bach
           ENCODING = 'UTF8'
           TABLESPACE = bachdb
           LC_COLLATE = 'en_US.UTF-8'
           LC_CTYPE = 'en_US.UTF-8'
           CONNECTION LIMIT = -1;

2.  Execute the db migrations (from the command prompt)
    rake db:migrate
    
2a. Mount the music libraries
	mount.cifs //140.198.4.57/Users/nollenr/Documents/MCCC\ Drop\ Box/Dropbox/Music /media/nollenr-r7e64/music/ -o user=nollenr,uid=501,gid=502
	mount.cifs //140.198.4.57/Users/nollenr/Documents/MCCC\ Drop\ Box/Dropbox/Temp\ Music /media/nollenr-r7e64/temp_music/ -o user=nollenr,uid=501,gid=502
    mount.cifs //140.198.4.57/Users/nollenr/Documents/temp/music /media/nollenr-r7e64/master -o user=nollenr,uid=501,gid=502
    mount.cifs "//140.198.4.57/Users/nollenr/Documents/MCCC Documents/Ron's Personal Documents/music" /media/nollenr-r7e64/personal_docs -o user=nollenr,uid=501,gid=502

3.  Load the methods (in rails console)
    require 'taglib'
    load 'm_find_fqfn.rb'
    load 'm_get_file_info.rb'
    load 'm_process_dir.rb'
    load 'm_file_extension.rb'
    load 'm_process_libraries.rb'
    load 'm_extension_list.rb'
    load 'm_process_file_specs.rb'
    load 'm_create_master_library_record.rb'
    load 'm_create_or_update_master_library.rb'
    load 'm_library_to_master_check.rb'
    load 'm_create_physical_master.rb'


4.  Create the Library
    --LibraryRoot.create(name: "/media/nollenr-r7e64/music", priority: 1)
    --LibraryRoot.create(name: "/media/nollenr-r7e64/temp_music/iTunes - DO NOT USE", priority: 2)
    --LibraryRoot.create(name: "/media/nollenr-r7e64/temp_music/iTunes - DO NOT USE THIS ONE EITHER", priority: 3)
    LibraryRoot.create(name: "/media/nollenr-r7e64/music/AudioBooks", priority: 1)
    LibraryRoot.create(name: "/media/nollenr-r7e64/music/iTunes Media/Music", priority: 2)
    LibraryRoot.create(name: "/media/nollenr-r7e64/music/iTunes Music", priority: 3)
    LibraryRoot.create(name: "/media/nollenr-r7e64/music/Music", priority: 4)
    LibraryRoot.create(name: "/media/nollenr-r7e64/temp_music/iTunes - DO NOT USE/Audiobooks", priority: 5)
    LibraryRoot.create(name: "/media/nollenr-r7e64/temp_music/iTunes - DO NOT USE/iTunes Media/Music", priority: 6)
    LibraryRoot.create(name: "/media/nollenr-r7e64/temp_music/iTunes - DO NOT USE/Music - DO NOT USE", priority: 7)
    LibraryRoot.create(name: "/media/nollenr-r7e64/master", priority: 0, ismaster: true)
    m_process_libraries

5.  Load the extension list (all known extensions in the library) and set the flag to true for files
    with a tag.
    m_extension_list
    FileExtension.where(:extension => ['.mp3','.m4p','.m4a','.m4b']).update_all(:process_tag => true)
    FileExtension.where(extension: '.m4a').update_all(sort_order: 1, description: "DRM Free")
    FileExtension.where(extension: '.mp3').update_all(sort_order: 2)
    FileExtension.where(extension: '.m4p').update_all(sort_order: 3, description: "iTunes format includes DRM")
    FileExtension.where(extension: '.m4b').update_all(description: 'MPEG-4 Audio Book')
    
    
6.  Populate the Libary File Spec - Get the details of the files I care about from the tag
    m_process_file_specs
    
7.  Check for Library leaf entries that have no details
    load 'm_library_leaf_records_wo_details.rb'
    
8.  Load the Master Library (MasterLibraryFile) - This is where the important logic sits.
    m_create_or_update_master_library
    
9.  A quick check that the number of tracks (artist, album, title) in the library is the same as the number in the master
    m_library_to_master_check  

10. Create the physical master library
    m_create_physical_master("/media/nollenr-r7e64/master")  
    
11.	Crosscheck the master
	load 'm_crosscheck_master.rb'
    load 'm_crosscheck_master_sub.rb'
    load 'm_setup_logging.rb'
    load 'm_log.rb'
    m_crosscheck_master

12.  Crosscheck the libraries
	LibraryRoot.create(name: "/media/nollenr-r7e64/personal_docs", priority: 8)
	load 'm_setup_logging.rb'
	load 'm_log.rb'
	load 'm_find_fqfn.rb'
	load 'm_crosscheck_libraries.rb'
	load 'm_process_dir.rb'
	m_crosscheck_libraries  

    Note:  WHen running a test, you might want to delete "sample music/Kalimba.mp3" (directory and file) so that 
    the crosscheck has something new to try and pick up.	  
    
Testing Statements:
MasterLibraryFile.where(artist: 'Diana Krall', album: 'Christmas Songs (iTunes Version)', title: 'White Christmas').count
MasterLibraryFile.where(artist: 'Diana Krall', album: 'ABC123', title: 'White Christmas').count

MasterLibraryFile.where(artist: 'Hillary Rodham Clinton ', album: 'Living History', title: 'Living History Part 3 of 3').count