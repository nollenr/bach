
Mount for the playlist to write to:
  [WORK]
  export USER="nollenr"
  export PASSWD=''
  mount.cifs //140.198.4.57/Users/nollenr/Documents/temp/playlists /media/nollenr-r7e64/playlists -o uid=501,gid=502
  LibraryRoot.create(name: "/media/nollenr-r7e64/playlists", windows_name: 'C:\Users\nollenr\Documents\temp\playlists', priority: 100, isplaylist: true)

  [HOME]
  export USER="gregNron"
  export PASSWD=''
  mount.cifs -- where am I going to store playlists
  LibraryRoot.create(name: "", windows_name: '', priority: 100, isplaylist: true)


  require 'csv'
  load 'm_write_playlist.rb'
  load 'm_windows_fqfn.rb'
  m_write_playlist('playlist02')


=======================================================================
Super Important Documentation for has_many, through
http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html

Nested Form Example
http://stackoverflow.com/questions/13506735/rails-has-many-through-nested-form

Strong Parameters
http://edgeguides.rubyonrails.org/action_controller_overview.html#strong-parameters
http://patshaughnessy.net/2014/6/16/a-rule-of-thumb-for-strong-parameters

jquery-ui
http://jqueryui.com/accordion/#fillspace

Rails 4 AJAX
https://coderwall.com/p/kqb3xq/rails-4-how-to-partials-ajax-dead-easy

twitter-typeahead
http://twitter.github.io/typeahead.js/examples/#remote
=======================================================================
Examples of creating has many through database rows in the console

pl = Playlist.find(1)            # find a playlist
mlf = MasterLibraryFile.find(27) # find a song
pl.master_library_files << mlf   # associate the playlist and song

Be SUPER CAREFUL with this one... it replaces all existing
  associations (delete and insert)
pl.master_library_file_ids=[2,3,4]

Be SUPER CAREFUL with this one too... it replaces all existing
pl.master_library_files=[MasterLibraryFile.find(33), MasterLibraryFile.find(34)]

This adds the additional associations
pl.master_library_files.push [MasterLibraryFile.find(100), MasterLibraryFile.find(101), MasterLibraryFile.find(102)]

jquery .ajax
http://www.tutorialspoint.com/jquery/ajax-jquery-ajax.htm

Bloodhound (API, Methods, and Options)
https://github.com/twitter/typeahead.js/blob/master/doc/bloodhound.md#bloodhoundclearremotecache
=======================================================================
A step forward in my progress

what I want, is when I click my button to do an
$.ajax({url: 'url', type: 'post', data: {player: { name: "test', room_id: '0' } } })
actually, .post is probably "more" correct in this case... it's a convenience method.
=======================================================================
A current view of the parameters coming in:
Parameters: {"playlist"=>{"id"=>"16", "musiclist"=>{"0"=>["0", "3501"], "1"=>["1", "733"]}}}
=======================================================================
Getting rails to servce up a static page of JSON data
I had to create a route:
  get 'countries.json' => 'playlists#countries'
  (an this is what was in the javascript:  url: 'countries.json')
  
  then in the contoller, I sucked the data into a var and then
  submitted that var to the javascript

  def countries
    @@data = File.read("countries.json")
    render :json => @@data
  end


