#1 - Reducing the result set
Default : m4a over mp3 when both versions are available
Options : take mp3 over m4a
          take which ever has the higher bitrate - m4a if they are the same
          take which ever has the higher bitrate - mp3 if they are the same

#2 - 
Default : Ignore track numbers when determining duplicates (group by title, artist, album)
Options : Include track numbers when determining duplicates (group by title, artist, album, track)
          (Example... Last Look (album)... track numbers are off for m4a files)
#3
Default : Do not include parent directory when determining duplicates
Options : Include parent directory when determing duplicates
          (Example... White Christmas (title)... Diana Krall (artist)... I will get duplicates if I include parent directory)

#4
Default : Include all "unknowns" titles/albums (at this time I believe there are 22 records)
Options : Don't include any unknowns

#5
Default : When title is like "Track%" and album is not null group them up by album/artist
        : When title is like "Track%" and album is null, take them all.

        
        
Process:
Get the list based on options #2, 3, 4, 5
  1.  where there are more than 1 option, reduce the result set by choosing those files based on option #1
  2.  if there are multiple files left, group by file size
      if one or more has a larger file size, choose that one (or group if there are more than 1)
  3.  if there are multiple files left, choose the one with the lowest id.
  
  select    null record_locator
,         lfs.title
,         lfs.artist
,         lfs.album
,         count(*)
from      library_file_specs lfs
where     title is not null
and       title = '1985'
and       upper(lfs.title) not like 'TRACK%'
group by  lfs.title
,         lfs.artist
,         lfs.album
-- LibraryFileSpec.where.not(title: nil).where("upper(title) not like 'TRACK%'").group(:title, :album, :artist).count
-- LibraryFileSpec.has_title.title_not_like_track.group_no_track_no_parent_dir.count
union
select    lfs.id
,         lfs.title
,         lfs.artist
,         lfs.album
,         count(*)
from      library_file_specs lfs
where     title is null
group by  lfs.id
,         lfs.title
,         lfs.artist
,         lfs.album
union
select    null
,         lfs.title
,         lfs.artist
,         lfs.album
,         count(*)
from      library_file_specs lfs
where     upper(lfs.title) like 'TRACK%'
and       lfs.album is not null
group by  lfs.title
,         lfs.artist
,         lfs.album
union
select    lfs.id
,         lfs.title
,         lfs.artist
,         lfs.album
,         count(*)
from      library_file_specs lfs
where     upper(lfs.title) like 'TRACK%'
and       lfs.album is null
group by  lfs.id
,         lfs.title
,         lfs.artist
,         lfs.album
order by  1,2,3